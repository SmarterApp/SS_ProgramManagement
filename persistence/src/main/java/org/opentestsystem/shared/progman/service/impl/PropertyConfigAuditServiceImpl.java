/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.progman.service.impl;

import java.util.List;

import org.opentestsystem.shared.progman.diff.DiffAuditHistory;
import org.opentestsystem.shared.progman.domain.AuditDateComparator;
import org.opentestsystem.shared.progman.domain.PropertyConfigAudit;
import org.opentestsystem.shared.progman.domain.PropertyEntryDiff;
import org.opentestsystem.shared.progman.domain.search.PropertyConfigAuditSearchRequest;
import org.opentestsystem.shared.progman.persistence.PropertyConfigAuditRepository;
import org.opentestsystem.shared.progman.service.PropertyConfigAuditService;
import org.opentestsystem.shared.search.domain.SearchResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.google.common.collect.ImmutableList;
import com.google.common.collect.Iterators;
import com.google.common.collect.Ordering;

@Service
public class PropertyConfigAuditServiceImpl implements PropertyConfigAuditService {

    @Autowired
    private transient PropertyConfigAuditRepository propertyConfigAuditRepository;

    @Autowired
    private transient DiffAuditHistory diffHistory;

    @Override
    public SearchResponse<PropertyConfigAudit> getPropertyConfigAudits(final PropertyConfigAuditSearchRequest searchRequest) {
        final SearchResponse<PropertyConfigAudit> searchResponse = this.propertyConfigAuditRepository.search(searchRequest);
        final List<PropertyConfigAudit> searchResults = searchResponse.getSearchResults();
        final List<PropertyConfigAudit> clonedResults = Ordering.from(AuditDateComparator.INSTANCE).sortedCopy(ImmutableList.copyOf(searchResults));

        PropertyConfigAudit olderConfig = null;
        for (final PropertyConfigAudit curConfig : clonedResults) {
            final List<PropertyEntryDiff> diffs = this.diffHistory.diffHistory(olderConfig, curConfig);
            curConfig.setHistoryDiff(Iterators.toArray(diffs.iterator(), PropertyEntryDiff.class));
            olderConfig = curConfig;
        }

        return searchResponse;
    }

}
