/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.progman.service;

import org.opentestsystem.shared.progman.domain.PropertyConfig;
import org.opentestsystem.shared.progman.domain.search.PropertyConfigSearchRequest;
import org.opentestsystem.shared.search.domain.SearchResponse;

/**
 * Facade for PropertyConfig.
 */
public interface PropertyConfigService {

    /**
     * Performs a update or insert depending if an id is populated on the object passed in.
     * 
     * @param propertyConfig
     *            object to be save or updated.
     * @return saved PropertyConfig with id populated.
     */
    PropertyConfig savePropertyConfig(PropertyConfig propertyConfig);

    /**
     * Gets a PropertyConfig object by id.
     * 
     * @param configId
     *            id of the propertyConfig.
     * @return PropertyConfig.
     */
    PropertyConfig getPropertyConfig(String configId);

    /**
     * Convenience method to get a PropertyConfig object by name and envName.
     * 
     * @param name
     *            Component name
     * @param envName
     *            Environment name.
     * @return PropertyConfig.
     */
    PropertyConfig getPropertyConfig(String name, String envName);

    /**
     * Gets an effective property set. If a configuration set for a component.
     * 
     * Configuration sets can extend another configuration set. If a configuration with the exendMe name is listed in
     * the same environment, your configuration set will inherit its properties.
     * 
     * This is intended to be a handy option for developers to allow them to override a couple of properties.
     * 
     * @param name
     *            Component name
     * @param envName
     *            Environment name.
     * @param extendMe
     *            component name to extend.
     * @return PropertyConfig.
     */
    PropertyConfig getEffectiveProperties(String name, String envName, String extendMe);

    /**
     * Removes a ProertyConfig object by id.
     * 
     * @param configId
     *            id of the propertyConfig.
     */
    void removePropertyConfig(String configId);

    /**
     * Searches configuration based on search criteria.
     * 
     * @param searchRequest
     *            holds search criteria.
     * @return SearchResponse<PropertyConfig> search response.
     */
    SearchResponse<PropertyConfig> searchPropertyConfigs(PropertyConfigSearchRequest searchRequest);
}
