/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.progman.service;

import java.util.List;
import java.util.Map;

import org.opentestsystem.shared.progman.domain.Component;
import org.opentestsystem.shared.progman.domain.Tenant;
import org.opentestsystem.shared.progman.domain.TenantType;
import org.opentestsystem.shared.progman.domain.search.TenantSearchRequest;
import org.opentestsystem.shared.search.domain.SearchResponse;
import org.springframework.data.domain.Pageable;

/**
 * Facade for Tenant.
 */
public interface TenantService {

    /**
     * Performs a update or insert depending if an id is populated on the object passed in.
     * 
     * @param Tenant
     *        object to be save or updated.
     * @return saved Tenant with id populated.
     */
    Tenant saveTenant(Tenant tenant);

    /**
     * Gets a Tenant object by id.
     * 
     * @param tenantId
     *        of the tenant.
     * @return Tenant.
     */
    Tenant getTenant(String tenantId);

    /**
     * Removes a Tenant object by id.
     * 
     * @param tenantId
     *        of the Tenant.
     */
    void removeTenant(String tenantId);

    /**
     * Searches tenants based on search criteria.
     * 
     * @param searchRequest
     *        holds search criteria.
     * @return SearchResponse<Tenant> search response.
     */
    SearchResponse<Tenant> searchTenants(TenantSearchRequest searchRequest);

    /**
     * Gets all tenants.
     * 
     * @return List of Tenants
     */
    List<Tenant> getTenants();

    Tenant findyByNameAndType(String name, TenantType type);

    List<Tenant> findyByNameAndType(Map<TenantType, String> searchParams);

    /**
     * Searches tenants by name or description
     * 
     * @param name tenant name to search by
     * @param description tenant description to search by
     * @param pageable paging information to search with
     * @return List<Tenant> search response.
     */
    List<Tenant> findByNameRegexOrDescriptionRegexAndType(String name, String description, TenantType type, Pageable pageable);

    /**
     * Finds tenants by componentName which are in good standing. Can also filter by searchVal (name/description) or tenantType
     * 
     * @param componentName - component to search tenants with
     * @param inGoodStanding - what standing the component should be in for the searched tenants (NULL = any standing)
     * @param searchVal - a string to match the Tenant name/description on (NULL = any name/description)
     * @param type - tenant types to search for (NULL = any type)
     * @param pageable - paging information to search with
     * @return List<Tenant> search response.
     */
    public List<Tenant> findByComponentAndSearchVal(final String componentName, Boolean inGoodStanding, final String searchVal, final TenantType type, final Pageable pageable);

    void cascadeComponentChanges(Component component);
}
