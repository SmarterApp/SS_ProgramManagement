/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.progman.transformer;

import java.util.ArrayList;
import java.util.List;

import org.opentestsystem.shared.progman.domain.Tenant;
import org.opentestsystem.shared.progman.domain.TenantSubscription;
import org.opentestsystem.shared.progman.domain.TenantType;

import com.google.common.collect.ImmutableList;

public class TenantBuilder {
    private final Tenant tenant;

    public TenantBuilder(final String id, final String name, final String description, final TenantType type, final List<TenantSubscription> tenantSubscriptions) {
        this.tenant = new Tenant();
        this.tenant.setId(id);
        this.tenant.setName(name);
        this.tenant.setType(type);
        this.tenant.setDescription(description);
        this.tenant.setTenantSubscriptions(tenantSubscriptions);
    }

    public TenantBuilder(final String id, final String name, final String description, final TenantType type) {
        this.tenant = new Tenant();
        this.tenant.setId(id);
        this.tenant.setName(name);
        this.tenant.setType(type);
        this.tenant.setDescription(description);
        this.tenant.setActive(true);
    }

    private List<TenantSubscription> getTenantSubscriptions() {
        if (null == this.tenant.getTenantSubscriptions()) {
            this.tenant.setTenantSubscriptions(new ArrayList<TenantSubscription>());
        }

        return this.tenant.getTenantSubscriptions();
    }

    public TenantBuilder addTenantSubscriptions(final TenantSubscription... tenantSubscription) {
        getTenantSubscriptions().addAll(ImmutableList.copyOf(tenantSubscription));
        return this;
    }

    public Tenant build() {
        return this.tenant;
    }
}
