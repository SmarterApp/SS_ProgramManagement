/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.progman.integration;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;

import java.util.Arrays;

import org.junit.Test;
import org.opentestsystem.shared.progman.domain.PropertyConfig;
import org.opentestsystem.shared.progman.domain.PropertyEntry;
import org.opentestsystem.shared.progman.persistence.PropertyConfigRepository;
import org.springframework.beans.factory.annotation.Autowired;

/**
 * Testing CRUD operations for PropertyConfig domain object.
 */
public class PropertyConfigRepositoryTest extends AbstractPersistenceEmbeddedTest {

    @Autowired
    private PropertyConfigRepository propertyConfigRepository;

    @Test
    public void testPropertyConfigRepositoryCrud() {
        PropertyConfig propertyConfig = new PropertyConfig();

        propertyConfig.setName("Test Sftp Configuration");
        propertyConfig.setEnvName("DEV");
        propertyConfig.setProperties(Arrays.asList(new PropertyEntry[] {new PropertyEntry("a", "b") }));
        propertyConfigRepository.save(propertyConfig);

        String configId = propertyConfig.getId();
        assertNotNull("id on saved Item should be not be null", configId);

        PropertyConfig readObj = propertyConfigRepository.findOne(configId);
        assertEquals("Environment Name must be the same", readObj.getEnvName(), "DEV");

        propertyConfigRepository.delete(readObj);
        assertNull("it should not exist", propertyConfigRepository.findOne(readObj.getId()));

    }

}
