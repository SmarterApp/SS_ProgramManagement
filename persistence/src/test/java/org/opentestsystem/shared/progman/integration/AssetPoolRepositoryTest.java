/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.progman.integration;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import org.junit.Test;
import org.opentestsystem.shared.progman.domain.AssetPool;
import org.opentestsystem.shared.progman.persistence.AssetPoolRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DuplicateKeyException;

public class AssetPoolRepositoryTest extends AbstractPersistenceEmbeddedTest { 

    @Autowired
    private AssetPoolRepository assetPoolRepository;

    @Test
    public void saveAssetPoolTest() {
        AssetPool assetPool = createDummyAssetPool();
        AssetPool savedAssetPool = assetPoolRepository.save(assetPool);
        assertNotNull("saved asset pool is null", savedAssetPool);
        assertNotNull("asset pool id is null, did it save?", savedAssetPool.getId());
    }

    @Test
    public void findAssetPoolTest() {
        AssetPool assetPool = createDummyAssetPool();
        AssetPool savedAssetPool = assetPoolRepository.save(assetPool);
        assertNotNull("saved asset pool is null", savedAssetPool);
        AssetPool foundAssetPool = assetPoolRepository.findOne(savedAssetPool.getId());
        assertEquals("asset pool id is different, did it save?", savedAssetPool.getId(), foundAssetPool.getId());

    }

    // cannot save two groups with same component and tenantID
    @Test(expected = DuplicateKeyException.class)
    public void saveDupAssetPoolTest() {

        AssetPool assetPool = createDummyAssetPool();

        AssetPool savedAssetPool = assetPoolRepository.save(assetPool);
        assertNotNull("saved asset is null", savedAssetPool);
        assertNotNull("asset id is null, did it save?", savedAssetPool.getId());
        assetPoolRepository.save(createDummyAssetPool());
    }

    private AssetPool createDummyAssetPool() {
        AssetPool assetPool = new AssetPool();
        assetPool.setTenantId("aaa");
        assetPool.setName("test pool");
        return assetPool;
    }

}
