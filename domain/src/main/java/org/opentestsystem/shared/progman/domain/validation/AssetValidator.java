/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.progman.domain.validation;

import java.util.List;
import java.util.Set;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

import org.opentestsystem.shared.progman.domain.Asset;
import org.springframework.util.CollectionUtils;
import org.springframework.util.StringUtils;

import com.google.common.collect.Sets;

/**
 * Validation implementation for validating asset.
 * @author mckanth
 */
public class AssetValidator implements ConstraintValidator<ValidAsset, List<Asset>> {

    @Override
    public void initialize(final ValidAsset constraintAnnotation) {
    }

    @Override
    public boolean isValid(final List<Asset> assets, final ConstraintValidatorContext context) {
        boolean isValid = true;
        if (!CollectionUtils.isEmpty(assets)) {
            Set<String> duplicateNames = Sets.newHashSet();
            Set<String> tempAssets = Sets.newHashSet();
            for (Asset asset : assets) {
                if (asset.getType() == Asset.AssetType.PROPERTY && StringUtils.isEmpty(asset.getProperty())) {
                    isValid = false;
                    context.buildConstraintViolationWithTemplate("Asset value is required for asset of type property.").addConstraintViolation();
                }
                if ((asset.getType() == Asset.AssetType.FILE || asset.getType() == Asset.AssetType.IMAGE) && StringUtils.isEmpty(asset.getAssetFileName())) {
                    isValid = false;
                    context.buildConstraintViolationWithTemplate("Asset file is required for asset of type file.").addConstraintViolation();
                }
                if (!StringUtils.isEmpty(asset.getName()) && !tempAssets.add(asset.getName())) { // don't need this constraint if name is blank
                    duplicateNames.add(asset.getName());
                }
            }

            if (!duplicateNames.isEmpty()) {
                isValid = false;
                context.buildConstraintViolationWithTemplate("Duplicate asset names " + duplicateNames).addConstraintViolation();
            }

            if (!isValid) {
                context.disableDefaultConstraintViolation();
            }
        }
        return isValid;
    }
}
