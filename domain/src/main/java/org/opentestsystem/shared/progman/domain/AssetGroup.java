/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.progman.domain;

import java.util.List;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import org.opentestsystem.shared.progman.domain.validation.ValidAsset;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.index.CompoundIndex;
import org.springframework.data.mongodb.core.index.CompoundIndexes;
import org.springframework.data.mongodb.core.mapping.Document;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.collect.Lists;

@Document
@JsonIgnoreProperties(ignoreUnknown = true)
@CompoundIndexes(value = { @CompoundIndex(name = "tenantComponent", def = "{'tenant':1, 'component':1}", unique = true) })
public class AssetGroup {

    @Id
    private String id;

    @NotNull(message = "assetGroup.tenant.required")
    private Tenant tenant;

    @NotNull(message = "assetGroup.component.required")
    private Component component;

    @Valid
    @ValidAsset(message = "asset.invalid")
    private List<Asset> assets;

    private static final String GET_RESOURCE_NAME = "/assetGroup/";

    public String getId() {
        return id;
    }

    public void setId(final String inId) {
        id = inId;
    }

    public Tenant getTenant() {
        return tenant;
    }

    public void setTenant(final Tenant ten) {
        this.tenant = ten;
    }

    public Component getComponent() {
        return component;
    }

    public void setComponent(final Component comp) {
        this.component = comp;
    }

    public List<Asset> getAssets() {
        return assets;
    }

    public void setAssets(final List<Asset> inAssets) {
        assets = inAssets;
    }

    public void addAsset(final Asset inAsset) {
        if (assets == null) {
            assets = Lists.newArrayList();
        }
        assets.add(inAsset);
    }

    @JsonProperty
    public String getUrl() {
        return GET_RESOURCE_NAME + this.id;
    }

    public Asset getAssetByName(final String inAssetName) {
        Asset returnAsset = null;
        if (getAssets() != null) {
            for (Asset asset : getAssets()) {
                if (asset.getName() != null && asset.getName().equals(inAssetName)) {
                    returnAsset = asset;
                    break;
                }
            }
        }
        return returnAsset;
    }
}
