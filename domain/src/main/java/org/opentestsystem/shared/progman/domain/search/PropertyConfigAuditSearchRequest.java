/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.progman.domain.search;

import java.util.Arrays;
import java.util.List;
import java.util.Map;

import org.opentestsystem.shared.progman.domain.PropertyConfig;
import org.opentestsystem.shared.search.domain.AbstractSearchRequest;
import org.opentestsystem.shared.search.domain.SearchFilter;
import org.opentestsystem.shared.search.domain.SearchFilter.Operator;
import org.opentestsystem.shared.search.domain.SearchFilter.SearchDataType;

public class PropertyConfigAuditSearchRequest extends AbstractSearchRequest {

    public static final String SEARCH_FILTER_AUDITED_ID = "auditedId";
    public static final String SEARCH_FILTER_ENV_NAME = "envName";
    public static final String SEARCH_FILTER_NAME = "name";
    public static final String SEARCH_FILTER_PROPERTY_KEY = "propertyKey";
    public static final String SEARCH_FILTER_PROPERTY_VALUE = "propertyValue";

    /**suid.*/
    private static final long serialVersionUID = 4654070838124666499L;

    private static final String SEARCH_RESOURCE = "/propertyConfigAudits";

    private static final List<SearchFilter> SEARCH_FILTERS = Arrays.asList(new SearchFilter[] {
            new SearchFilter(SEARCH_FILTER_NAME, "propertyConfig.name", Operator.WLD_REG, SearchDataType.String),
            new SearchFilter(SEARCH_FILTER_ENV_NAME, "propertyConfig.envName", Operator.WLD_REG, SearchDataType.String),
            new SearchFilter(SEARCH_FILTER_PROPERTY_KEY, "propertyConfig.properties.propertyKey", Operator.WLD_REG, SearchDataType.String),
            new SearchFilter(SEARCH_FILTER_PROPERTY_VALUE, "propertyConfig.properties.propertyValue", Operator.WLD_REG, SearchDataType.String),
            new SearchFilter(SEARCH_FILTER_AUDITED_ID, "propertyConfig._id", Operator.EQ, SearchDataType.ObjectId),
    });
    public PropertyConfigAuditSearchRequest(final Map<String, String[]> requestMap) {
        super(requestMap);
    }

    @Override
    protected List<SearchFilter> getSearchFilters() {
        return SEARCH_FILTERS;
    }

    @Override
    protected String getSearchResource() {
        return SEARCH_RESOURCE;
    }

    @Override
    protected String replaceEscapeChars(final String inSearchValue) {
        return inSearchValue.replace(".", PropertyConfig.ESCAPE_CHARACTER);
    }

}
